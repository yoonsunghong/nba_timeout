}
else if(class(x) != "numeric") {
return("non-numeric argument")
}
else if(na.rm == FALSE) {
return((quantile(x, 0.1))[[1]])
}
}
#get_percentile90() - function that computes the 90th percentile
get_percentile90 <- function(x, na.rm = TRUE) {
if(class(x) == "numeric" & na.rm == TRUE) {
x <- ((quantile(remove_missing(x), 0.9))[[1]])
return(x)
}
else if(class(x) != "numeric") {
return("non-numeric argument")
}
else if(na.rm == FALSE) {
return((quantile(x, 0.9))[[1]])
}
}
get_percentile90(c(1,4,7,NA,10))
#get_median() - function that shows the median
get_median <- function(x, na.rm = TRUE) {
if(class(x) == "numeric" & na.rm == TRUE) {
x <- ((quantile(remove_missing(x),0.5))[[1]])
return(x)
}
else if(class(x) != "numeric") {
return("non-numeric argument")
}
else if(na.rm == FALSE) {
return((quantile(x, 0.5))[[1]])
}
}
#get_average() - function that retrieves the average value of a vector
get_average <- function(x, na.rm = TRUE) {
av <- 0
if(class(x) == "numeric" & na.rm == TRUE) {
for(i in 1:length(remove_missing(x))) {
av <- av + remove_missing(x)[i]
}
return(av/length(remove_missing(x)))
}
else if(class(x) != "numeric") {
return("non-numeric argument")
}
else if(na.rm == FALSE) {
for(i in 1:length(x)) {
av <- av + x[i]
}
return(av/length(x))
}
}
#get_stdev - function that retrieves the standard deviation of a vector
get_stdev <- function(x, na.rm = TRUE) {
stdev <- 0
ag <- get_average(x)
if(class(x) == "numeric" & na.rm == TRUE) {
for(i in 1:length(remove_missing(x))) {
stdev <- stdev + ((remove_missing(x)[i]-ag)^2)
}
return(sqrt(stdev/(length(remove_missing(x))-1)))
}
else if(class(x) != "numeric") {
return("non-numeric argument")
}
else if(na.rm == FALSE) {
for(i in 1:length(x)) {
stdev <- stdev + ((x[i]-ag)^2)
}
return(sqrt(stdev/(length(x)-1)))
}
}
#get_quartile1() - function that retrieves the 1st quartile
get_quartile1 <- function(x, na.rm = TRUE) {
if(class(x) == "numeric" & na.rm == TRUE) {
return((quantile(remove_missing(x)))[[2]])
}
else if(class(x) != "numeric") {
return("non-numeric argument")
}
else if(na.rm == FALSE) {
return((quantile(x))[[2]])
}
}
#get_quartile3() - function that retrieves the 3rd quartile
get_quartile3 <- function(x, na.rm = TRUE) {
if(class(x) == "numeric" & na.rm == TRUE) {
return((quantile(remove_missing(x)))[[4]])
}
else if(class(x) != "numeric") {
return("non-numeric argument")
}
else if(na.rm == FALSE) {
return((quantile(x))[[4]])
}
}
#count_missing <- counts the number of NA's
count_missing <- function(x) {
if(class(x) == "numeric") {
sum(is.na(x))
}
else if(class(x) != "numeric") {
return("non-numeric argument")
}
}
#summary_stats - presents list of summary statistics ####
summary_stats <- function(x){
summary <- list(get_minimum(x),get_percentile10(x),get_quartile1(x),
get_median(x),get_average(x),get_quartile3(x),get_percentile90(x),
get_maximum(x),get_range(x),get_stdev(x),count_missing(x))
names(summary) <- c("minimum","percent10","quartile1","median","mean","quartile3",
"percent90","maximum","range","stdev","missing")
return (summary)
}
summary_stats(a)
summary_stats <- function(x) {
summary <- c(get_minimum(x),get_percentile10(x),get_quartile1(x),
get_median(x),get_average(x),get_quartile3(x),
get_percentile90(x),get_maximum(x),get_range(x),
get_stdev(x),count_missing(x))
names(summary) <- c("minimum","perecent10","quartile1","median",
"mean","quartile3","percent90","maximum",
"range","stdev","missing")
return(summary)
}
summary_stats(a)
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
timeout <- chance[match(cvec,chance$chance_id),]
timeout <- timeout %>%
select(end_game_clock,period,game_code)
timeout$call <- dat_who$call
timeout$time <- 720 - timeout$end_game_clock
timeout <- na.omit(timeout)
timeout$end_game_clock <- round(timeout$end_game_clock, 0)
timeout$qtrtime <- paste(timeout$period, "quarter,", timeout$end_game_clock, "seconds left", sep = " ")
timeout %>%
arrange(call, game_code, period, desc(end_game_clock))
teamlist <- split(timeout, timeout$call)
?floor
?floor
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
timeout <- chance[match(cvec,chance$chance_id),]
timeout <- timeout %>%
select(end_game_clock,period,game_code)
timeout$call <- dat_who$call
timeout$minute <- floor(timeout$end_game_clock/60, digits = 0)
timeout$minute <- floor(timeout$end_game_clock/60)
timeout$minute
timeout$second <- timeout$end_game_clock - (timeout$minute*60)
timeout$second
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
timeout <- chance[match(cvec,chance$chance_id),]
timeout <- timeout %>%
select(end_game_clock,period,game_code)
timeout$call <- dat_who$call
timeout$minute <- floor(timeout$end_game_clock/60)
timeout$end_game_clock <- round(timeout$end_game_clock, 0)
timeout$second <- timeout$end_game_clock - (timeout$minute*60)
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
timeout <- chance[match(cvec,chance$chance_id),]
timeout <- timeout %>%
select(end_game_clock,period,game_code)
timeout$call <- dat_who$call
timeout$minute <- floor(timeout$end_game_clock/60)
timeout$end_game_clock <- round(timeout$end_game_clock, 0)
timeout$second <- timeout$end_game_clock - (timeout$minute*60)
timeout <- na.omit(timeout)
timeout$qtrtime <- paste(timeout$period, "quarter,", timeout$minute, "minute(s)", timeout$second, "seconds left", sep = " ")
timeout %>%
arrange(call, game_code, period, desc(end_game_clock))
teamlist <- split(timeout, timeout$call)
timeout <- timeout %>%
arrange(call, game_code, period, desc(end_game_clock))
timeout
str(timeout)
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
timeout <- chance[match(cvec,chance$chance_id),]
timeout <- timeout %>%
select(end_game_clock,period,game_code)
timeout$call <- dat_who$call
timeout$minute <- floor(timeout$end_game_clock/60)
timeout$end_game_clock <- round(timeout$end_game_clock, 0)
timeout$second <- timeout$end_game_clock - (timeout$minute*60)
timeout <- na.omit(timeout)
timeout$qtrtime <- paste(timeout$period, "quarter,", timeout$minute, "minute(s)", timeout$second, "seconds left", sep = " ")
timeout <- timeout %>%
arrange(call, game_code, period, desc(end_game_clock))
teamlist <- split(timeout, timeout$call)
for(i in 1:30) {
team <- as.data.frame(teamlist[i])
team <- team[,c(3,7)]
colnames(team) <- c("Game Number", "Time in the quarter")
setwd(savePath)
write.table(team, file = paste0(names(teamlist[i]),'.csv'), sep=',', row.names = FALSE)
}
timeout$game_code
gsub('.{2}$', '', timeout$game_code)
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
dat
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
dat_who
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
dat_who$opp <- rep(0, nrow(dat_who))
for(i in 1:nrow(dat_who)) {
if(dat$call[i] == dat$home_abbrev[i]) {
dat_who$opp[i] <- dat$away_abbrev[i]
}
else if(dat$call[i] == dat$away_abbrev[i]) {
dat_who$opp[i] <- dat$home_abbrev[i]
}
}
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
dat_who$opp <- rep(0, nrow(dat_who))
for(i in 1:nrow(dat_who)) {
if(dat$call[i] == dat$home_abbrev[i]) {
dat_who$opp[i] <- dat$away_abbrev[i]
}
else if(dat$call[i] == dat$away_abbrev[i]) {
dat_who$opp[i] <- dat$home_abbrev[i]
}
}
timeout <- chance[match(cvec,chance$chance_id),]
timeout <- timeout %>%
select(end_game_clock,period,game_code)
timeout$call <- dat_who$call
timeout$opponents <- dat_who$opp
timeout$minute <- floor(timeout$end_game_clock/60)
timeout$end_game_clock <- round(timeout$end_game_clock, 0)
timeout$second <- timeout$end_game_clock - (timeout$minute*60)
timeout <- na.omit(timeout)
timeout$qtrtime <- paste(timeout$period, "quarter,", timeout$minute, "minute(s)", timeout$second, "seconds left", sep = " ")
timeout
dat_who$opp
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
dat_who$opp <- rep(0, nrow(dat_who))
for(i in 1:nrow(dat_who)) {
if(dat_who$call[i] == dat_who$home_abbrev[i]) {
dat_who$opp[i] <- dat_who$away_abbrev[i]
}
else if(dat$call[i] == dat_who$away_abbrev[i]) {
dat_who$opp[i] <- dat_who$home_abbrev[i]
}
}
timeout <- chance[match(cvec,chance$chance_id),]
timeout <- timeout %>%
select(end_game_clock,period,game_code)
timeout$call <- dat_who$call
timeout$opponents <- dat_who$opp
timeout$minute <- floor(timeout$end_game_clock/60)
timeout$end_game_clock <- round(timeout$end_game_clock, 0)
timeout$second <- timeout$end_game_clock - (timeout$minute*60)
timeout <- na.omit(timeout)
timeout$qtrtime <- paste(timeout$period, "quarter,", timeout$minute, "minute(s)", timeout$second, "seconds left", sep = " ")
timeout
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
dat_who$opp <- rep(0, nrow(dat_who))
dat_who
dat_who$call
nrow(dat_who)
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
dat_who$opp <- rep(0, nrow(dat_who))
for(i in 1:nrow(dat_who)) {
if(dat_who$call[i] == dat_who$home_abbrev[i]) {
dat_who$opp[i] <- dat_who$away_abbrev[i]
}
else {
dat_who$opp[i] <- dat_who$home_abbrev[i]
}
}
dat_who
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
dat_who$opp <- rep(0, nrow(dat_who))
for(i in 1:nrow(dat_who)) {
if(dat_who$call[i] == dat_who$home_abbrev[i]) {
dat_who$opp[i] <- dat_who$away_abbrev[i]
}
else {
dat_who$opp[i] <- dat_who$home_abbrev[i]
}
}
timeout <- chance[match(cvec,chance$chance_id),]
timeout <- timeout %>%
select(end_game_clock,period,game_code)
timeout$call <- dat_who$call
timeout$opponents <- dat_who$opp
timeout$minute <- floor(timeout$end_game_clock/60)
timeout$end_game_clock <- round(timeout$end_game_clock, 0)
timeout$second <- timeout$end_game_clock - (timeout$minute*60)
timeout <- na.omit(timeout)
timeout$qtrtime <- paste(timeout$period, "quarter,", timeout$minute, "minute(s)", timeout$second, "seconds left", sep = " ")
timeout
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
dat_who$opp <- rep(0, nrow(dat_who))
for(i in 1:nrow(dat_who)) {
if(dat_who$call[i] == dat_who$home_abbrev[i]) {
dat_who$opp[i] <- dat_who$away_abbrev[i]
}
else {
dat_who$opp[i] <- dat_who$home_abbrev[i]
}
}
timeout <- chance[match(cvec,chance$chance_id),]
timeout <- timeout %>%
select(end_game_clock,period,game_code)
timeout$call <- dat_who$call
timeout$opponents <- dat_who$opp
timeout$minute <- floor(timeout$end_game_clock/60)
timeout$end_game_clock <- round(timeout$end_game_clock, 0)
timeout$second <- timeout$end_game_clock - (timeout$minute*60)
timeout <- na.omit(timeout)
timeout$qtrtime <- paste(timeout$period, "quarter,", timeout$minute, "minute(s)", timeout$second, "seconds left", sep = " ")
#simplifying the game number
timeout$game_code <- gsub('.{2}$', '', timeout$game_code)
#splitting into different teams
teamlist <- split(timeout, timeout$call)
teamlist
rm(list=ls())
library(dplyr)
library(plyr)
nbaPath <- "/Users/yoonsunghong/Desktop/nba/"                  # Where NBA data is
dat <- read.csv(paste0(nbaPath, "2017-pbp.csv"),stringsAsFactors = F)
chance <- read.csv(paste0(nbaPath, "2017-chances.csv"), stringsAsFactors = F)
rootPath <- "/Users/yoonsunghong/Desktop/timeout/"
savePath <- "/Users/yoonsunghong/Desktop/timeout/report"
dat$call <- substr(dat$text, 2, 4)
vec <- grep("Timeout", dat$text)
cvec <- dat$chance_id[vec]
dat_who <- dat[vec,]
dat_who$opp <- rep(0, nrow(dat_who))
for(i in 1:nrow(dat_who)) {
if(dat_who$call[i] == dat_who$home_abbrev[i]) {
dat_who$opp[i] <- dat_who$away_abbrev[i]
}
else {
dat_who$opp[i] <- dat_who$home_abbrev[i]
}
}
timeout <- chance[match(cvec,chance$chance_id),]
timeout <- timeout %>%
select(end_game_clock,period,game_code)
timeout$call <- dat_who$call
timeout$opponents <- dat_who$opp
timeout$minute <- floor(timeout$end_game_clock/60)
timeout$end_game_clock <- round(timeout$end_game_clock, 0)
timeout$second <- timeout$end_game_clock - (timeout$minute*60)
timeout <- na.omit(timeout)
timeout$qtrtime <- paste(timeout$period, "quarter,", timeout$minute, "minute(s)", timeout$second, "seconds left", sep = " ")
#simplifying the game number
timeout$game_code <- gsub('.{2}$', '', timeout$game_code)
#splitting into different teams
teamlist <- split(timeout, timeout$call)
#for loops for export
for(i in 1:30) {
team <- as.data.frame(teamlist[i])
team <- team[,c(3,8,5)]
colnames(team) <- c("Game Number", "Time in the quarter", "Opponents")
setwd(savePath)
write.table(team, file = paste0(names(teamlist[i]),'.csv'), sep=',', row.names = FALSE)
}
